### Do not edit this file ###

import math
import sys
import csv


## READ IN FILES ##
rawData = str(sys.argv[1]) # read raw data file

# read in GRS_Info file
GRS_info = []
with open('GRS_23andMe_info.txt') as csvfile:
    reader = csv.reader(csvfile, delimiter='\t')
    for row in reader:
        GRS_info.append(row)
GRS_info.pop(0) # Get rid of headings

# read in patient's 23&Me data
raw = []
with open(rawData) as csvfile:
    reader = csv.reader(csvfile, delimiter='\t')
    for row in reader:
        raw.append(row)
raw = raw[20:] # remove header info

## EXTRACT APPROPRIATE DATA ##
SNPID = [item[0] for item in GRS_info] # SNPs in GRS

rawSNPID = [item[0] for item in raw] # SNPs in rawData
indices = [i for i, item in enumerate(rawSNPID) if item in SNPID] # indices of rawData with GRS SNPs
rawSet = [raw[i] for i in indices] # extract these SNPs from raw data

if len(rawSet) != len(SNPID):
    print('\n\n')
    raise ValueError('Please input a 23andMe v5 raw data file') # verify we have appropriate SNPs/raw data file


## CALCULATE GRS ##
# take in one SNP from rawData at a time and determine its contribution to GRS
def alleleScore(rawRow):
    rawSNPID = rawRow[0] # SNPID in patient's data
    read = rawRow[3] # patients genotype at the SNP
    i = SNPID.index(rawSNPID) # index of SNP in GRS info
    SNPinfo = GRS_info[i] # get all of the SNP info
    
    eff = SNPinfo[1] # effect allele
    non = SNPinfo[2] # non-effect allele
    weight = float(SNPinfo[3]) #OR
    
    # calculate score for the allele
    if read == (eff+non) or read == (non+eff):
        count = 1
    elif read == (eff+eff):
        count = 2
    elif read == (non+non):
        count = 0
    else:
        raise ValueError(str(rawSNPID)+': Patient\'s 23&Me alleles don\'t match those in GRS reference')
        
    alleleScore = count*math.log(weight,10) # return score for the allele
    return alleleScore
    
scores = list(map(alleleScore, rawSet))
GRS = round(sum(scores),2)

GRSn = round((GRS-2.91)/0.157,2)

## PRINT TO CONSOLE ##
print('\n')
print('Patient\'s raw GRS is: '+str(GRS))
print('\n')
print('Patient\'s GRS normalized to European population is: '+str(GRSn))
print('\n')
print('\t\t<.....low risk.....|.....med risk.....|.....high risk.....>')
print('Normalized')
print('   GRS\t\t\t\t-0.83\t    0\t    0.83')
print('\n\n')

